name: Release

on:
  workflow_dispatch:
    inputs:
      dryRun:
        description: 'Dry run'
        required: false
        type: boolean
        default: false
      debug:
        description: 'Debug mode'
        required: false
        type: boolean
        default: false

permissions:
  contents: read

env:
  HUSKY: 0

jobs:
  release:
    if: github.event_name == 'workflow_dispatch' && github.actor == 'pplancq'
    name: Release
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: pplancq/actions/setup-node@main

      - name: Install package
        run: npm ci

      - name: Run build
        run: npm run build

      - name: Config npm
        run: |
          npm config set access=public
          npm config set provenance=true

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GIT_AUTHOR_EMAIL: release[bot]@users.noreply.github.com
          GIT_AUTHOR_NAME: release[bot]
          GIT_COMMITTER_EMAIL: release[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: release[bot]
          GITHUB_DISABLED_SUCCESS_COMMENT: 'true'
          GITHUB_DISABLED_RELEASED_LABELS: 'true'
        run:  |
          ARGS=""
          if [ "${{ github.event.inputs.dryRun }}" = "true" ]; then
            ARGS="$ARGS --dry-run"
          fi
          if [ "${{ github.event.inputs.debug }}" = "true" ]; then
            ARGS="$ARGS --debug"
          fi
          npm run release -- $ARGS

      - name: Update package-lock.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install
          git config user.email "$release[bot]@users.noreply.github.com"
          git config user.name "release[bot]"
          git add package-lock.json
          git commit -m "chore(svg-tools): fix package-lock.json [skip ci]"
          git push origin main
        continue-on-error: true

  deploy:
    if: github.ref == 'refs/heads/main' && (github.event.inputs.dryRun != 'true')
    needs:
      - release
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    concurrency:
      group: 'pages'
      cancel-in-progress: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Setup Node
        uses: pplancq/actions/setup-node@main

      - name: Run build
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3
        with:
          path: 'apps/storybook/build'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4
