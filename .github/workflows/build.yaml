name: Build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

env:
  HUSKY: 0

jobs:
  install:
    name: Install package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: pplancq/actions/setup-node@main

      - name: Check package-lock.json
        run: npm run package:check

      - name: Install package
        run: npm ci

  commitlint:
    if: github.event_name == 'pull_request'
    name: CommitLint
    needs:
      - install
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: pplancq/actions/setup-node@main

      # https://commitlint.js.org/guides/ci-setup.html#github-actions
      - name: Validate PR commits with commitlint
        run: npx commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose --color

  lint:
    name: Lint code
    needs:
      - install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: pplancq/actions/setup-node@main

      - name: Run lint
        run: npm run lint -- -- --max-processes 1

  test:
    name: Test
    needs:
      - install
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 20.x, 21.x, 22.x, 23.x ]
        react-version: [ 18, 19 ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js v${{ matrix.node-version }}
        uses: pplancq/actions/setup-node@main
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install react@${{ matrix.react-version }}
        run: npm install --save-dev react@${{ matrix.react-version }} react-dom@${{ matrix.react-version }}

      - name: Run test with Node.Js v${{ matrix.node-version }}
        run: npm run test:ci

      - name: Upload sonar reports
        if: matrix.node-version == '22.x' && matrix.react-version == '19'
        uses: actions/upload-artifact@v4
        with:
          name: sonar-reports
          path: |
            coverage/lcov.info
            sonar-report.xml

  sonarcloud:
    name: SonarCloud Scan
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download test reports
        uses: actions/download-artifact@v4
        with:
          name: sonar-reports

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v4.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: Build
    needs:
      - install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: pplancq/actions/setup-node@main

      - name: Run build
        run: npm run build
